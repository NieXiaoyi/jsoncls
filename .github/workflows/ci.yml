# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: '3.11'
            os: ubuntu-latest
          - python-version: '3.10'
            os: ubuntu-latest
          - python-version: '3.9'
            os: ubuntu-20.04
          - python-version: '3.7'
            os: ubuntu-20.04
          # This tests with Python 2.7 and with Ubuntu-20.04's Python 3.8 for combined py2+3 coverage:
          - python-version: '2.7'
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      # uses: actions/setup-python@v4 due to https://github.com/actions/setup-python/issues/672:
      # https://github.com/MatteoH2O1999/setup-python
      # This action tries to build from source all Python versions that actions/setup-python
      # does not support. It also allows to cache built versions so that after the first run,
      # installation time is really low. Hope it works also with 20.04, else it needs more changes:
      uses: MatteoH2O1999/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        allow-build: info
        cache-build: true
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt
        ver=$(python --version 2>&1)
        if [[ $ver == *"Python 3"* ]]; then pip install -r test-requirements-py3.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude tests
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude tests
    - name: Test with pytest
      run: |
        ver=$(python --version 2>&1)
        if [[ $ver == *"Python 2"* ]]; then pytest --ignore tests/benchmark; else pytest; fi
